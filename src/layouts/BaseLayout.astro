---
import type { ImageMetadata } from "astro";
import { getImage, Image } from "astro:assets";
import profileImage from "@assets/profile.jpeg";
import { Icon } from "astro-icon/components";

import "@styles/global.scss";

interface Props {
  title?: string;
  backgroundImage: ImageMetadata;
}

const { title, backgroundImage } = Astro.props;

const optimizedBgImage = await getImage({ src: backgroundImage });

const backgroundImageUrl = `url('${optimizedBgImage.src}')`;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <div class="wrapper">
      <header>
        <nav>
          <span>|</span>
          <a href="/">Home</a>
          <span>|</span>
          <a href="/blog">Blog</a>
          <span>|</span>

          <a href="https://github.com/JasterV">
            <Icon size="1.5rem" name="mdi:github" />
          </a>
          <a href="https://linkedin.com/in/jaster-victor/">
            <Icon size="1.5rem" name="mdi:linkedin" />
          </a>
        </nav>

        <div class="profile">
          <a href="/">
            <div class="profile-image-wrapper">
              <Image
                src={profileImage}
                alt="profile image"
                class="profile-image"
              />
            </div>
          </a>
          <div>
            <h2>Victor Martinez</h2>
            <p class="description">/* Be a catalyst for change */</p>
          </div>
        </div>
      </header>

      <main>
        <slot />
      </main>

      <footer>
        <p>Built with <a href="https://astro.build/">Astro</a> ♥</p>
        <p>
          Color palette from
          <a href="https://github.com/craftzdog/solarized-osaka.nvim/"
            >Craftzdog</a
          > ♥
        </p>
        <p>© 2024 Victor Martínez. All Rights Reserved.</p>
      </footer>
    </div>
  </body>
</html>

<style define:vars={{ backgroundImageUrl }}>
  body {
    display: flex;
    justify-content: center;
    color: var(--text-color);
    background: var(--backgroundImageUrl) no-repeat;
    background-size: cover;
    background-position: center;
    background-attachment: fixed;
    font-size: var(--font-size-m);
  }

  .wrapper {
    display: flex;
    flex-direction: column;
    width: 80ch;
    min-height: calc(100vh - 1rem);
    border: 2px solid white;
    background: rgba(29, 31, 33, 0.95);
    backdrop-filter: blur(10px);
    padding: 1.5rem;
    margin: 0.5rem;
  }

  main {
    padding: 1.5rem 0;
    line-height: 1.5;
  }

  footer {
    color: var(--text-color-light);
    font-size: 1rem;
    text-align: center;
    display: flex;
    flex-direction: column;
    padding-top: 1rem;
    margin-top: auto;
    gap: 0.5rem;
  }

  .description {
    color: var(--text-color-light);
    font-size: 0.9rem;
    padding-top: 0.25rem;
  }

  nav {
    padding-top: 0.3rem;
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
  }

  .profile {
    display: flex;
    flex-direction: row;
    gap: 1.5rem;
    align-items: start;
  }

  .profile-image-wrapper {
    width: 50px;
    height: 50px;
    border: 2px solid white;
    border-radius: 50%;
    position: relative;
    overflow: hidden;
  }

  .profile-image-wrapper:hover {
    border-color: var(--violet300);
    cursor: pointer;
  }

  .profile-image {
    width: 100%;
    height: auto;
    margin-top: -35%;
  }

  header {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  @media screen and (min-width: 636px) {
    header {
      flex-direction: row-reverse;
      align-items: start;
      justify-content: space-between;
      gap: 0.25rem;
    }
  }
</style>
